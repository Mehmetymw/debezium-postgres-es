version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - kafka-connect
      - elasticsearch
      - kafka
      - postgres
      - kibana
      - zookeeper

  postgres:
    image: quay.io/debezium/postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=inventory
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: postgres -c wal_level=logical
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  zookeeper:
    image: quay.io/debezium/zookeeper:2.3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: quay.io/debezium/kafka:2.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_MESSAGE_MAX_BYTES=1500000000
      - KAFKA_SOCKET_REQUEST_MAX_BYTES=1500000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1500000000
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER_SCHEMAS_ENABLE=false
    depends_on:
      - zookeeper

  kafka-connect:
    build:
      context: .
      dockerfile: kafka-connect/Dockerfile
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_statuses
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - REST_PORT=8083
      - REST_ADVERTISED_HOST_NAME=kafka-connect
    depends_on:
      - kafka
      - elasticsearch

networks:
  debezium-net:
    driver: bridge
